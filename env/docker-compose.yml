services:
  db:
    stop_grace_period: 1s
    network_mode: host
    build:
      context: '.'
      dockerfile: pg.dockerfile
    container_name: ${NAME}-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    env_file:
      - .env
      - '${ENV_FILE}'
    ports:
      - '${DB_PORT}:5432'
    expose:
      - '${DB_PORT}'

  minio:
    stop_grace_period: 1s
    network_mode: host
    image: minio/minio
    container_name: '${NAME}-minio'
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    ports:
      - '${MINIO_PORT}:${API_PORT}'
    command: server /data

  api:
    stop_grace_period: 1s
    network_mode: host
    container_name: ${NAME}-api
    image: bitnami/node:20.10.0
    depends_on:
      - db
      - minio
    working_dir: /usr/src/app/
    volumes:
      - ../:/usr/src/app/
    command: ['npm', '--prefix', 'apps/api', 'run', 'dev']
    env_file:
      - .env
      - '${ENV_FILE}'
    ports:
      - '${API_PORT}:${API_PORT}'
    expose:
      - '${API_PORT}'

  webapp:
    stop_grace_period: 1s
    container_name: '${NAME}-webapp'
    network_mode: host
    image: node:20-alpine
    depends_on:
      - api
    working_dir: /usr/src/app
    volumes:
      - ../:/usr/src/app
    command: ['npm', '--prefix', 'apps/webapp', 'run', 'dev']
    env_file:
      - .env
      - '${ENV_FILE}'
    ports:
      - '${WEBAPP_PORT}:${WEBAPP_PORT}'
    expose:
      - '${WEBAPP_PORT}'
